{   LLM 캐시
    {   그게 뭔데? 왜 쓰는데?
        LLM 추론에는 비용이 많이 든다.
        동일하거나 비슷한 요청은 답변을 미리 저장해두면,
        새로 생성할 필요가 없어 생성 요청을 줄일 수 있다.
    }

    {   원리
        보강된 프롬프트를 LLM에 넣기 전, LLM 캐시를 거친다.
        유사한 요청이 있었다면, LLM 캐시에 저장된 답변을 전달하고
        없으면 LLM이 생성
    }

    {   LLM 캐시의 두 방식
        {   일치 캐시
            프롬프트의 문자열이 완전히 같을 때 같은 대답을 보냄,
            파이썬 딕셔너리 안에 프롬프트가 같은게 있는지 확인해보는 모양임 ※ 이 경우는 내부적으로 해시맵을 쓰는듯?
        }
        {   유사 검색 캐시
            이전에 유사한 요청이 있는지 판단
            들어온 프롬프트의 임베딩과, 이전 프롬프트의 임베딩을 판단
            유사할 경우에 저장된 텍스트를 반환
            이전 프롬프트의 임베딩은 어디에? 벡터 DB에 ※ GPT 피셜, 벡터를 저장하는 원리는 같으나 RAG의 것과는 분리해서 저장

            유사하지 않을경우,
            프롬프트의 임베딩과 그 생성 결과를 벡터 DB에 저장
        }
    }
}